<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>tech.ugma.education</groupId>
    <artifactId>wmp-0</artifactId>
    <version>1.0-SNAPSHOT</version>


    <!--Put any dependencies your application has (like ControlsFX or LOGBack) in a <dependency> tag here-->
    <dependencies>

        <!--Various Cool GUI Components-->
        <!-- https://mvnrepository.com/artifact/org.controlsfx/controlsfx -->
        <dependency>
            <groupId>org.controlsfx</groupId>
            <artifactId>controlsfx</artifactId>
            <version>8.40.12</version>
        </dependency>

    </dependencies>

    <!--You can put variables here in angle brackets. This can be helpful if you
    end up replacing a certain value in multiple places often.
    See the "Properties" heading here https://maven.apache.org/pom.html-->
    <properties>
    </properties>


    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <!--Will be used to put everything in one jar?-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.3.1</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>tech.ugma.education.wmp0.Main</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>


            <!--The webstart plugin; produces the JNLP which you need to put in the same at the same path as your "codebase"-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>webstart-maven-plugin</artifactId>
                <version>1.0-beta-7</version>
                <executions>
                    <execution>
                        <!--This binds it to the package phase-->
                        <phase>package</phase>
                        <goals>
                            <goal>jnlp-inline</goal> <!-- use jnlp, jnlp-inline or jnlp-single as appropriate -->
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <!-- Set to true to exclude all transitive dependencies (dependencies of your dependencies).
                    Default is false, so you could get rid of this tag. -->
                    <excludeTransitive>false</excludeTransitive>

                    <!-- The path where the libraries are stored within the jnlp structure. not required. by default the libraries are within the working directory -->
                    <libPath>lib</libPath>
                    <outputJarVersions>true</outputJarVersions>


                    <!-- JNLP generation -->
                    <jnlp>
                        <!-- default values -->
                        <!--inputTemplateResourcePath>${project.basedir}</inputTemplateResourcePath-->
                        <!--inputTemplate>src/main/jnlp/template.vm</inputTemplate--> <!-- relative to inputTemplateResourcePath -->
                        <!--<outputFile>app.jnlp</outputFile>--> <!-- defaults to launch.jnlp -->

                        <!-- Used to automatically identify the jar containing the main class. -->
                        <mainClass>tech.ugma.education.wmp0.Main</mainClass>
                    </jnlp>


                    <!-- SIGNING -->
                    <!-- This step is necessary because of how much strict Java Security Expectations have become. -->
                    <!-- Signing could be done by hand, but automating it makes things much easier. -->

                    <sign>
                        <keystore>${project.basedir}/src/main/deploy/jnlp/the.keystore</keystore>
                        <keypass>C3iwkmfG6
                        </keypass>  <!-- if we need to override passwords easily from the command line. ${keypass} -->
                        <storepass>C3iwkmfG6</storepass> <!-- ${storepass} -->
                        <!--storetype>fillme</storetype--> <!--Does this really need to be filled?-->
                        <alias>brad</alias>

                        <!--<validity>fillme</validity>-->

                        <!--&lt;!&ndash; only required for generating the keystore &ndash;&gt;-->
                        <!--<dnameCn>EmbeddedTomcatWebstart</dnameCn>-->
                        <!--<dnameOu>Organisation Unit</dnameOu>-->
                        <!--<dnameO>Organisation</dnameO>-->
                        <!--<dnameL>Location</dnameL>-->
                        <!--<dnameSt>State</dnameSt>-->
                        <!--<dnameC>Country</dnameC>-->

                        <verify>true</verify> <!-- verify that the signing operation succeeded -->

                        <!-- KEYSTORE MANAGEMENT -->
                        <!--<keystoreConfig>-->
                        <!--<delete>true</delete> &lt;!&ndash; delete the keystore &ndash;&gt;-->
                        <!--<gen>true</gen>       &lt;!&ndash; optional shortcut to generate the store. &ndash;&gt;-->
                        <!--</keystoreConfig>-->
                    </sign>

                    <!-- BUILDING PROCESS -->

                    <pack200>false</pack200>
                    <gzip>false</gzip> <!-- default force when pack200 false, true when pack200 selected ?? -->

                    <!-- causes a version attribute to be output in each jar resource element, optional, default is false -->
                    <outputJarVersions>false</outputJarVersions>

                    <!--install>false</install--> <!-- not yet supported -->
                    <verbose>true</verbose>
                </configuration>
            </plugin>
        </plugins>
    </build>


    <!--These are the lists of the remote repositories Maven will use
    for discovering dependencies and extensions.-->
    <repositories>
        <repository>
            <id>jboss</id>
            <url>http://repository.jboss.org/nexus/content/groups/public/</url>
        </repository>
        <repository>
            <id>sonatype</id>
            <url>http://oss.sonatype.org/content/repositories/releases/</url>
        </repository>
    </repositories>

    <name>Webstart App</name> <!--The full name of the project.-->
    <url>https://www.ugma.tech</url> <!--The URL to the project's homepage.-->

</project>
